{
	"name": "dynamics-365-for-code",
	"displayName": "Dynamics365 for Code",
	"publisher": "CloudSmith",
	"description": "Code extension providing development capabilities for Dynamics 365 written by CloudSmith Consulting LLC",
	"version": "0.8.0",
	"preview": true,
	"engines": {
		"vscode": "^1.38.0"
	},
	"icon": "resources/images/cloudsmith-logo-only-200px.png",
	"categories": [
		"Extension Packs",
		"Other"
	],
	"keywords": [
		"Dynamics",
		"Dynamics 365",
		"Dynamics 365 Customer Engagement",
		"XRM",
		"CRM"
	],
	"activationEvents": [
		"onFileSystem:file",
		"onView:cs.dynamics.viewContainers.dynamicsExplorer",
		"onView:cs.dynamics.viewContainers.templateExplorer",
		"onCommand:cs.dynamics.controls.explorer.dotNetBuild",
		"onCommand:cs.dynamics.controls.explorer.dotNetTest",
		"onCommand:cs.dynamics.controls.explorer.generateEntityCodeToFolder",
		"onCommand:cs.dynamics.controls.explorer.generateEntityCodeToFile",
		"onCommand:cs.dynamics.controls.explorer.packSolutionFromFolder",
		"onCommand:cs.dynamics.controls.explorer.registerPluginFile",
		"onCommand:cs.dynamics.controls.explorer.unpackSolutionToFolder",
		"onCommand:cs.dynamics.controls.svcUtilConfig.configure",
		"onCommand:cs.dynamics.deployment.addSolutionComponent",
		"onCommand:cs.dynamics.deployment.publishCustomizations",
		"onCommand:cs.dynamics.deployment.removeSolutionComponent",
		"onCommand:cs.dynamics.deployment.registerPluginAssembly",
		"onCommand:cs.dynamics.deployment.updateSolutionMapping",
		"onCommand:cs.dynamics.extension.clearTerminal",
		"onCommand:cs.dynamics.extension.createTerminal",
		"onCommand:cs.dynamics.extension.downloadRequiredScripts",
		"onCommand:cs.dynamics.powerShell.generateEntities",
		"onCommand:cs.dynamics.powerShell.packSolution",
		"onCommand:cs.dynamics.powerShell.unpackSolution",
		"onCommand:cs.dynamics.templates.createProjectFromTemplate",
		"onCommand:cs.dynamics.templates.deleteProjectTemplate",
		"onCommand:cs.dynamics.templates.openProjectTemplatesFolder",
		"onCommand:cs.dynamics.templates.saveProjectAsTemplate"
	],
	"main": "./out/extension.js",
	"contributes": {
		"configuration": {
			"type": "object",
			"title": "Dynamics 365 for Code",
			"properties": {
				"cs.dynamics.configuration.tools.sdkInstallPath": {
					"type": "string",
					"default": "C:\\Deploy\\Tools",
					"description": "The full path to the root of the CRM SDK installation on your computer"
				},
				"cs.dynamics.configuration.tools.updateSource": {
					"type": "string",
					"format": "uri",
					"default": "https://raw.githubusercontent.com/cloudsmithconsulting/Dynamics365-VsCode-Samples/master/",
					"description": "The URL where supporting scripts are located"
				},
				"cs.dynamics.configuration.tools.updateChannel": {
					"type": "string",
					"default": "production",
					"enum": [
						"production",
						"beta"
					],
					"enumDescriptions": [
						"Production updates only",
						"Beta updates"
					],
					"description": "The update channel to use"
				},
				"cs.dynamics.configuration.iconThemes.selectedTheme": {
					"type": "string",
					"default": "default",
					"enum": [
						"default"
					],
					"enumDescriptions": [
						"Default Theme"
					],
					"description": "The icon set to use in explorer views"
				},
				"cs.dynamics.configuration.explorer.showDefaultSolution": {
					"type": "boolean",
					"default": "true",
					"description": "Show the Default Solution in the Dynamics explorer pane"
				},
				"cs.dynamics.configuration.explorer.showWelcomeExperience": {
					"type": "boolean",
					"default": "true",
					"description": "Show the welcome experience for Dynamics when you open a new workspace"
				},
				"cs.dynamics.configuration.templates.placeholders": {
					"type": "object",
					"default": {},
					"description": "List of built in placeholders, in key-value string pairs."
				},
				"cs.dynamics.configuration.templates.placeholderRegExp": {
					"type": "string",
					"default": "#{([\\s\\S]+?)}",
					"description": "Regular expression for detecting placeholders (e.g. \"#{([\\s\\S]+?)}\").  The first capture group dictates the placeholder key."
				},
				"cs.dynamics.configuration.templates.templatesDirectory": {
					"type": "string",
					"description": "Filesystem path that stores template folders"
				},
				"cs.dynamics.configuration.templates.treeViewGroupPreference": {
					"type": "string",
					"default": "Publisher",
					"enum": [
						"None",
						"Publisher",
						"Category"
					],
					"enumDescriptions": [
						"No Grouping",
						"Group by Publisher",
						"Group by Category"
					],
					"description": "Preference for grouping template items in the Template Explorer"
				},
				"cs.dynamics.configuration.templates.usePlaceholders": {
					"type": "boolean",
					"default": true,
					"description": "Look for and replace placeholders in template (e.g. #{author})"
				}
			}
		},
		"commands": [
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.refreshEntry",
				"title": "Refresh",
				"icon": {
					"light": "resources/icons/default/refresh.light.svg",
					"dark": "resources/icons/default/refresh.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.addEntry",
				"title": "New",
				"icon": {
					"light": "resources/icons/default/add.light.svg",
					"dark": "resources/icons/default/add.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.editEntry",
				"title": "Edit",
				"icon": {
					"light": "resources/icons/default/edit.light.svg",
					"dark": "resources/icons/default/edit.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.deleteEntry",
				"title": "Delete",
				"icon": {
					"light": "resources/icons/default/delete.light.svg",
					"dark": "resources/icons/default/delete.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.clickEntry",
				"title": "Click",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.inspectEntry",
				"title": "Inspect",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.editConnection",
				"title": "Open",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.addEntryToSolution",
				"title": "Add to Solution",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.removeEntryFromSolution",
				"title": "Remove from Solution",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.moveSolution",
				"title": "Change local workspace folder",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.openInApp",
				"title": "Open in App",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.openInBrowser",
				"title": "Open in Browser",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.openInEditor",
				"title": "Open in Text Editor",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.dynamicsTreeView.unpackSolution",
				"title": "Export into workspace",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.createWebResource",
				"title": "New Web Resource",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.createFromItemTemplate",
				"title": "New Templated Item",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.createFromProjectTemplate",
				"title": "New Templated Project",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.dotNetBuild",
				"title": "Build project",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.dotNetTest",
				"title": "Test project",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.generateEntityCodeToFolder",
				"title": "Generate Dynamics entity classes",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.generateEntityCodeToFile",
				"title": "Generate Dynamics entity classes",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.packSolutionFromFolder",
				"title": "Deploy solution to Dynamics 365",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.packWebResource",
				"title": "Deploy web resource to Dynamics 365",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.registerPluginFile",
				"title": "Deploy assembly to Dynamics 365",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.saveTemplateFile",
				"title": "Save as template",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.saveTemplateFolder",
				"title": "Save as template",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.explorer.unpackSolutionToFolder",
				"title": "Download & unpack Dynamics 365 solution here",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.newWorkspace.hideLoadingMessage",
				"title": "Show the loading message in the New Workspace screen",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.newWorkspace.open",
				"title": "Get started in a new workspace",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.newWorkspace.showLoadingMessage",
				"title": "Show the loading message in the New Workspace screen",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.svcUtilConfig.configure",
				"title": "Configure entity code generation for use with CrmSvcUtil.exe",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.refreshEntry",
				"title": "Refresh",
				"icon": {
					"light": "resources/icons/default/refresh.light.svg",
					"dark": "resources/icons/default/refresh.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.addEntry",
				"title": "New",
				"icon": {
					"light": "resources/icons/default/add.light.svg",
					"dark": "resources/icons/default/add.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.editEntry",
				"title": "Edit",
				"icon": {
					"light": "resources/icons/default/edit.light.svg",
					"dark": "resources/icons/default/edit.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.deleteEntry",
				"title": "Delete",
				"icon": {
					"light": "resources/icons/default/delete.light.svg",
					"dark": "resources/icons/default/delete.dark.svg"
				},
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.clickEntry",
				"title": "Click",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.createInWorkspace",
				"title": "Create in Workspace",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.openEntry",
				"title": "Open in Explorer",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.exportEntry",
				"title": "Export Template",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.controls.templateTreeView.importEntry",
				"title": "Import Template",
				"category": "UserInterface"
			},
			{
				"command": "cs.dynamics.deployment.addSolutionComponent",
				"title": "Add component to a Dynamics 365 Solution",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.createWebResource",
				"title": "Create a web resource in your workspace or on a Dynamics 365 instance",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.compareWebResource",
				"title": "Compare a local web resource file to a version deployed on a Dynamics 365 instance",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.dotNetBuild",
				"title": "Build a .Net Core project in the current workspace",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.dotNetTest",
				"title": "Build and Test a .Net Core project in the current workspace",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.packWebResource",
				"title": "Deploy a Web Resource to Dynamics 365",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.publishCustomizations",
				"title": "Publish solution changes on a Dynamics 365 server",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.registerPluginAssembly",
				"title": "Register or update a plugin assembly",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.removeSolutionComponent",
				"title": "Remove a component from a Dynamics 365 Solution",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.removeSolutionMapping",
				"title": "Remove remembered locations where Dynamics solutions are stored in this workspace",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.unpackWebResource",
				"title": "Download a Web Resource from Dynamics 365",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.deployment.updateSolutionMapping",
				"title": "Create or update where Dynamics solutions are stored in this workspace",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.extension.clearTerminal",
				"title": "Clear the Dynamics 365 terminal",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.extension.createTerminal",
				"title": "Open the Dynamics 365 terminal",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.extension.downloadRequiredScripts",
				"title": "Download required PowerShell scripts for VSCode extension from GitHub",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.powerShell.unpackSolution",
				"title": "Download & unpack solution from a registered Dynamics server",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.powerShell.packSolution",
				"title": "Pack & deploy solution to a registerd Dynamics server",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.powerShell.generateEntities",
				"title": "Generate entity code from metadata on a registered Dynamics server",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.templates.createFromTemplate",
				"title": "Create new items or projects from a template",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.templates.deleteTemplate",
				"title": "Delete a template from the catalog",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.templates.editTemplateCatalog",
				"title": "Open template catalog in code editor",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.templates.exportTemplate",
				"title": "Export template from the template catalog",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.templates.importTemplate",
				"title": "Import template into the template catalog",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.templates.openTemplateFolder",
				"title": "Open template folder in explorer",
				"category": "Dynamics 365 CE"
			},
			{
				"command": "cs.dynamics.templates.saveTemplate",
				"title": "Save workspace items as a template in the template catalog",
				"category": "Dynamics 365 CE"
			}
		],
		"viewsContainers": {
			"activitybar": [
				{
					"id": "dynamics365-explorer",
					"title": "Dynamics 365 CE",
					"icon": "resources/images/dynamics.png"
				}
			]
		},
		"views": {
			"dynamics365-explorer": [
				{
					"id": "cs.dynamics.viewContainers.dynamicsExplorer",
					"name": "Dynamics Explorer"
				}
			],
			"explorer": [
				{
					"id": "cs.dynamics.viewContainers.templateExplorer",
					"name": "Template Explorer"
				}
			]
		},
		"menus": {
			"explorer/context": [
				{
					"command": "cs.dynamics.controls.explorer.dotNetBuild",
					"when": "explorerResourceIsFolder == true || resourceExtname == .csproj || resourceExtname == .vbproj",
					"group": "build@1"
				},
				{
					"command": "cs.dynamics.controls.explorer.dotNetTest",
					"when": "explorerResourceIsFolder == true || resourceExtname == .csproj || resourceExtname == .vbproj",
					"group": "build@2"
				},
				{
					"command": "cs.dynamics.controls.explorer.generateEntityCodeToFile",
					"when": "explorerResourceIsFolder != true && resourceLangId == csharp || resourceLangId == vb",
					"group": "generateCode@1"
				},
				{
					"command": "cs.dynamics.controls.explorer.generateEntityCodeToFolder",
					"when": "explorerResourceIsFolder",
					"group": "generateCode@2"
				},
				{
					"command": "cs.dynamics.controls.explorer.packSolutionFromFolder",
					"when": "explorerResourceIsFolder",
					"group": "zzz_azuretools_deploy@3"
				},
				{
					"command": "cs.dynamics.controls.explorer.packWebResource",
					"when": "resourceExtname == .html || resourceExtname == .css || resourceExtname == .js || resourceExtName == .json || resourceExtname == .xml || resourceExtname == .png || resourceExtname == .jpg || resourceExtname == .gif || resourceExtname == .xap || resourceExtname == .xsl || resourceExtname == .ico || resourceExtname == .svg || resourceExtname == .resx",
					"group": "zzz_azuretools_deploy@4"
				},
				{
					"command": "cs.dynamics.controls.explorer.unpackSolutionToFolder",
					"when": "explorerResourceIsFolder",
					"group": "zzz_azuretools_deploy@5"
				},
				{
					"command": "cs.dynamics.controls.explorer.registerPluginFile",
					"when": "explorerResourceIsFolder != true && resourceExtname == .csproj || resourceExtname == .vbproj || resourceExtname == .dll",
					"group": "zzz_azuretools_deploy@4"
				},
				{
					"command": "cs.dynamics.controls.explorer.createFromItemTemplate",
					"when": "explorerResourceIsFolder",
					"group": "navigation@1"
				},
				{
					"command": "cs.dynamics.controls.explorer.createFromProjectTemplate",
					"when": "explorerResourceIsFolder",
					"group": "navigation@2"
				},
				{
					"command": "cs.dynamics.controls.explorer.createWebResource",
					"when": "explorerResourceIsFolder",
					"group": "navigation@3"
				},
				{
					"command": "cs.dynamics.controls.explorer.saveTemplateFile",
					"when": "explorerResourceIsFolder != true",
					"group": "navigation@999"
				},
				{
					"command": "cs.dynamics.controls.explorer.saveTemplateFolder",
					"when": "explorerResourceIsFolder",
					"group": "navigation@999"
				}
			],
			"view/title": [
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.refreshEntry",
					"group": "navigation",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.addEntry",
					"group": "navigation",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.refreshEntry",
					"group": "navigation",
					"when": "view == cs.dynamics.viewContainers.templateExplorer"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.editEntry",
					"group": "navigation",
					"when": "view == cs.dynamics.viewContainers.templateExplorer"
				}
			],
			"view/item/context": [
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.addEntry",
					"group": "inline",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canAddItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.editEntry",
					"group": "inline",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canEditItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.deleteEntry",
					"group": "inline",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canDeleteItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.refreshEntry",
					"group": "group@1",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canRefreshItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.inspectEntry",
					"group": "group@2",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canInspectItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.openInApp",
					"group": "group@3",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canOpenInApp)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.openInBrowser",
					"group": "group@4",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canOpenInBrowser)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.openInEditor",
					"group": "group@5",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canOpenInEditor)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.unpackSolution",
					"group": "deployment@1",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canUnpackSolution)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.moveSolution",
					"group": "deployment@1",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canMoveSolution)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.addEntryToSolution",
					"group": "deployment@2",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canAddToSolution)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.dynamicsTreeView.removeEntryFromSolution",
					"group": "deployment@3",
					"when": "view == cs.dynamics.viewContainers.dynamicsExplorer && viewItem =~ /^(.*)(canRemoveFromSolution)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.addEntry",
					"group": "inline",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canAddItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.createInWorkspace",
					"group": "group@3",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canCreateInWorkspace)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.editEntry",
					"group": "inline",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canEditItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.deleteEntry",
					"group": "inline",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canDeleteItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.openEntry",
					"group": "group@2",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canOpenItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.refreshEntry",
					"group": "group@1",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canRefreshItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.exportEntry",
					"group": "group@4",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canExportItem)(.*)$/"
				},
				{
					"command": "cs.dynamics.controls.templateTreeView.importEntry",
					"group": "group@4",
					"when": "view == cs.dynamics.viewContainers.templateExplorer && viewItem =~ /^(.*)(canImportItem)(.*)$/"
				}
			]
		}
	},
	"scripts": {
		"vscode:prepublish": "npm run compile",
		"compile": "tsc -p ./",
		"watch": "tsc -watch -p ./",
		"pretest": "npm run compile",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/archiver": "^3.0.0",
		"@types/async": "^3.0.3",
		"@types/glob": "^7.1.1",
		"@types/lodash": "^4.14.144",
		"@types/mocha": "^5.2.6",
		"@types/node": "^10.14.19",
		"@types/node-fetch": "^2.5.2",
		"@types/vscode": "^1.38.0",
		"@types/xml2js": "^0.4.5",
		"glob": "^7.1.4",
		"mocha": "^6.1.4",
		"tslint": "^5.12.1",
		"typescript": "^3.3.1",
		"vscode-test": "^1.2.0"
	},
	"dependencies": {
		"@iconify/iconify": "^1.0.3",
		"adal-node": "^0.2.1",
		"archiver": "^3.1.1",
		"async": "^3.1.0",
		"eol": "^0.9.1",
		"httpntlm": "^1.7.6",
		"jquery": "^3.4.1",
		"jsoneditor": "^7.1.0",
		"lodash": "^4.17.15",
		"mustache": "^3.1.0",
		"node-fetch": "^2.6.0",
		"node-stream-zip": "^1.8.2",
		"opn": "^6.0.0",
		"typescript-linq": "^1.0.6",
		"xml2js": "^0.4.22"
	}
}
